ClearGlobals();

// Break any existing connection
if (metaIsConnected(), MetaDisconnect());

// Make a specific new connection: Note we do not use the chance to specify a repository
// Coonection info:
// 							Machine				Port
//                          -------             ----
// Jon's machine:		d12865.na.sas.com		8561
// JMP Dev:				jmpdev.na.sas.com		8561
// Unix:				ctnh6i01.unx.sas.com	48561
// z/OS:				s390deva.mvs.sas.com	18561
//
// (More at: http://sww.sas.com/jmpwiki/Wiki.jsp?page=HowToConnectToSASServersOnJmpdev)
ok = MetaConnect("d12865.na.sas.com", 8561, "DefaultAuth", "sasdemo", "******", Prompt(IfNeeded));
if (!ok, Beep(); Dialog("MetaConnect Failed"); Throw());

// Get a list of the repositories assoicated with the current metadata server
repositories = MetaGetRepositories();
Show(repositories);
// If there is more than one repository . . .
If (NItems(repositories())>1, 
	// . . . let the user pick the one to use
	dlg = Dialog(
					TextBox("Select a Repository"),
					TextBox(" "),
					rep = ListBox(Eval(repositories)),
					HList(Button("OK"), Button("Cancel"))
				);
	rep = dlg["rep"];
	// But make sure we can connect to it succesfully
	if (!metaSetRepository(rep[1]), Beep(); Dialog("MetaSetRepoository Failed"); Throw());
 );

// Now get a list of SAS Servers registered in the current repository
servers = MetaGetServers();
Show(servers);

// Pick a particular stored process  (returns 0 if the specified stored process does not exist)
stpName = "JMP BI Demos/Forbes 2000 Analysis";						// This one has one paramater
//stpName = "Samples/Stored Processes/Sample: Hello World";			// This one has no parameters
stp = MetaGetStoredProcess(stpName);
Show(stp);

// Find out about the stored process . . .
stpName2 = stp << GetName();
stpID = stp << GetMetadataID();
stpPath = stp << GetMetadataPath();

// Find out what parameters there are (returns {} if there are none) . . .
stpAllParams = stp << GetParamNames();
//stpVisibleParams = stp << GetParamNames(Visible(1));
//stpModifiableParams = stp << GetParamNames(Modifiable(1));
//stpRequiredParams = stp << GetParamNames(Required(1));
//stpExpertParams = stp << GetParamNames(Expert(1));

// Loop over the parameters (nothing happens if NItems==0) . . .
for (i=1, i<=NItems(stpAllParams), i++,
// Find out what values this parameter can take . . .
		paraEnumValues = stp << GetParamEnumValues(stpAllParams[i]);
		paraEnumLabels = stp << GetParamEnumLabels(stpAllParams[i]);
		// Get the current value of this parameter
		paramValueCurrent = stp << GetParamValue(stpAllParams[i]);
		Show(stpAllParams[i], paramValueCurrent);
		// Set the current value of this parameter to the first one possible
		stp << SetParamValue(stpAllParams[i], paraEnumLabels[1]);
		paramValueCurrent = stp << GetParamValue(stpAllParams[i]);
		Show(stpAllParams[i], paramValueCurrent);
		// Run the stored process in the foreground: Route alerts to JMP log rather than JMP UI
		status = stp << GetStatus(); Print("Not started yet, so status is: ", status);
		stp << Run(NoAlerts(1));
		status = stp << GetStatus(); Print("After foreground execution status is: ", status);
		if (status != 10,
			Print("Foreground execution did not complete successfully");
			sMsg = stp << GetStatusMessage();
			Print(sMsg);
			Throw()
			);
		// Get the (SAS) results of the stored process . . .
		SASres = stp << GetResults();
		Print( "SAS Resulkts are in "||(SASres << GetDirectory()) );
		NewWindow("SAS Log for Stored Process: "||stpName, TextBox(SASres << GetLog()));
		NewWindow("SAS Output for Stored Process: "||stpName, TextBox(SASres << GetOutput()));
		// What results files have been generated by SAS?
		resultsFiles = SASres << GetResultFileInfo();
		// If there is a JSL file in these results, run it . . .
		fileNames = resultsFiles[1];
		For (j=1, j<=NItems(fileNames), j++,
			// Is it a JSL file extension? If so run it (again) (Assumes three characters)
			fileExtension = Substr(fileNames[j], -3, 3);
			If (Uppercase(fileExtension)=="JSL", SASRes << RunScript(fileNames[j]))
		);				
);

MetaDisconnect();