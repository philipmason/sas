// ian.cox@jmp.com: 10Jan07

// Break any existing connection
if (metaIsConnected(), MetaDisconnect());

// Connect to the meadata server on a machine
ok = MetaConnect("d12865.na.sas.com", 8561, "DefaultAuth", "sasdemo", "******", Prompt(IfNeeded));
if (!ok, Beep(); Dialog("MetaConnect Failed"); Throw());

// Get a reference to a stored rocess that is known to exist
stpPathName = "Demo Stored Processes/Candy Sales Charts";
stp = MetaGetStoredProcess(stpPathName);

// Find out what parameters there are (returns {} if there are none) . . .
stpAllParams = stp << GetParamNames();

// Loop over the parameters (nothing happens if NItems==0) . . .
for (i=1, i<=NItems(stpAllParams), i++,
		// Find out what values this parameter can take . . .
		paraEnumValues = stp << GetParamEnumValues(stpAllParams[i]);
		paraEnumLabels = stp << GetParamEnumLabels(stpAllParams[i]);
		// Set the current value of this parameter to the last one possible
		stp << SetParamValue(stpAllParams[i], paraEnumLabels[NItems(paraEnumLabels)]);
		// Show the selected value in the log
		paramValueCurrent = stp << GetParamValue(stpAllParams[i]);
		Show(i, stpAllParams[i], paramValueCurrent);		
);

// Run the stored process in the foreground:
// Route alerts to JMP log rather than JMP UI
stp << Run(NoAlerts(1));
status = stp << GetStatus();
if (status != 10,
	Print("Foreground execution did not complete successfully");
	sMsg = stp << GetStatusMessage();
	Print(sMsg);
	Beep();
	Throw()
	);
// Get the (SAS) results of the stored process . . .
SASres = stp << GetResults();
Dialog("SAS Resulkts are in "||(SASres << GetDirectory()));
NewWindow("SAS Log for Stored Process: "||stpPathName, TextBox(SASres << GetLog()));
NewWindow("SAS Output for Stored Process: "||stpPathName, TextBox(SASres << GetOutput()));
// What results files have been generated by SAS?
resultsFiles = SASres << GetResultFileInfo();
// If there is a JSL file in these results, run it . . .
fileNames = resultsFiles[1];
For (j=1, j<=NItems(fileNames), j++,
	// Is it a JSL file extension? If so run it (again) (Assumes three characters)
	fileExtension = Substr(fileNames[j], -3, 3);
	If (Uppercase(fileExtension)=="JSL", SASRes << RunScript(fileNames[j]))
);
		